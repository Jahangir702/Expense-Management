@page "/expenses/edit/{key}"
@using Web.Blazor.Client.HttpServices
@inject ExpenseHttpService expenseHttpService
@inject NavigationManager Navigation

<h3>Edit Expense</h3>

@if (expense == null)
{
    <LoadingIndicator />
}
else
{
    <div class="form-group">
        <label for="expenseCategory">Expense Category:</label>
        <select class="form-control" @bind="expense.ExpenseCategoryId">
            <option value="">Select an Expense Category</option>
            @foreach (var category in expenseCategoryList)
            {
                <option value="@category.Oid">@category.Description</option>
            }
        </select>
    </div>   

    <div class="form-group">
        <label for="description">Description:</label>
        <input type="text" class="form-control" @bind="expense.Description" />
    </div>

    <div class="form-group">
        <label for="price">Price:</label>
        <input type="number" class="form-control" @bind="expense.Price" />
    </div>

    <div class="form-group">
        <label for="expenseDate">Expense Date:</label>
        <input type="date" class="form-control" @bind="expense.ExpenseDate"/>
    </div>

    <button type="submit" class="btn btn-primary" @onclick="UpdateExpense">Save</button>
    <button class="btn btn-secondary" @onclick="CancelEdit">Cancel</button>
}

@code {
    private Expense expense;
    private List<ExpenseCategory> expenseCategoryList;

    [Parameter]
    public string key { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if(!string.IsNullOrEmpty(key))
        {
            // Fetch expense details based on the provided ID
            expense = await expenseHttpService.GetExpenseByIdAsync(int.Parse(key));
        }

        //Fetch expenseCategory List
        expenseCategoryList = await expenseHttpService.GetExpenseCategoriesAsync();
    }

    private async Task UpdateExpense()
    {
        try
        {
            await expenseHttpService.UpdateExpenseAsync(expense);
            //Navigation.NavigateTo("/expenses");
        }
        catch (Exception ex)
        {

            Console.WriteLine($"Error: {ex.Message}");
            Navigation.NavigateTo("/expenses");
        }
    }

    private void CancelEdit()
    {
        // Redirect to Expense index page without saving changes
        Navigation.NavigateTo("/expenses");
    }
}