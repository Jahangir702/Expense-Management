@page "/expensecategories/edit/{key}"
@using Web.Blazor.Client.HttpServices
@inject ExpenseCategoryHttpService expenseCategoryHttpService
@inject NavigationManager Navigation

<h3>Edit Expense Category</h3>

@if (expenseCategory == null)
{
    <LoadingIndicator />
}
else
{
    <div class="card bg-light">
        <div class="card-body">
            <div class="form-group">
                <label for="description">Expense Category Name:</label>
                <input type="text" class="form-control" id="description" @bind="expenseCategory.Description" />
            </div>
            <div class="form-group">
                <label for="available">Is Available:</label>
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="available" @bind="expenseCategory.Available" />
                    <label class="form-check-label" for="available">Available</label>
                </div>
            </div>
            <button type="submit" class="btn btn-primary" @onclick="UpdateExpenseCategory">Save</button>
            <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
        </div>
    </div>
}

@code {
    ExpenseCategory expenseCategory;

    [Parameter]
    public string key { get; set; }

    protected override async Task OnInitializedAsync()
    {
        
        expenseCategory = await expenseCategoryHttpService.GetcategoryByIdAync(int.Parse(key));
    }

    private async Task UpdateExpenseCategory()
    {
        try
        {
            await expenseCategoryHttpService.UpdateExpenseCategoryAsync(expenseCategory);
            //Navigation.NavigateTo("/expensecategories");
        }
        catch (Exception ex)
        {

            Console.WriteLine($"Error: {ex.Message}");
            Navigation.NavigateTo("/expensecategories");
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/expensecategories");
    }
}